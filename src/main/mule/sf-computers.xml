<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<file:config name="File_Config" doc:name="File Config" doc:id="5a44694e-198a-485e-989d-b4c8472eee3b" >
		<file:connection workingDir="E:\studio-workspace\sf-computers\src\main\resources" />
	</file:config>
	<salesforce:sfdc-config name="Salesforce_Config" doc:name="Salesforce Config" doc:id="84f8f040-6c4a-43b9-b902-bc2087acb2a7" >
		<salesforce:basic-connection username="jezkie00secondary@empathetic-wolf-nyul3s.com" password="Admin1812!" securityToken="Pv1DckVSEn0uZds35zK9MgCV" />
	</salesforce:sfdc-config>
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="31296698-0f81-45db-894d-4934846ee0a2" basePath="/sf-computers">
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="dad26c9d-3610-4fc1-aa62-d47a98c50188" >
		<db:my-sql-connection host="localhost" port="3306" user="root" password="Admin1812!" database="sfcomputers" />
	</db:config>
	<jms:config name="JMS_Config" doc:name="JMS Config" doc:id="d7311b32-20d3-46d5-953d-98e4ca959e18" >
		<jms:active-mq-connection username="admin" password="admin" >
			<jms:factory-configuration brokerUrl="tcp://localhost:61616" />
		</jms:active-mq-connection>
	</jms:config>
	
	<flow name="batch_upload_flow" doc:id="7157b6e4-2282-4d56-8e0e-503259288f53" >
		<file:listener doc:name="On New or Updated File" doc:id="5c6ed09e-8b9e-48f2-9b04-b842d13bda51" config-ref="File_Config" directory="input" moveToDirectory="processed" applyPostActionWhenFailed="false" renameTo="#['arrival-' ++ (now() as String {format: &quot;yyyy_MM_dd_HH_mm_ss_SSS&quot;}) ++ '.processed']">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.csv"/>
		</file:listener>
		<ee:transform doc:name="Transform Message" doc:id="eeee4002-57f7-4585-8b35-25a80f3d0848" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7af7226c-7ed1-47b7-b0a6-dd6c850fe0e5" message="#[output application/json --- payload]" />
		<batch:job jobName="sf-computersBatch_Job" doc:id="f96ff411-ab5e-4a19-ad12-5ea94e71471c" >
			<batch:process-records>
				<batch:step name="Check_Product_Batch_Step" doc:id="5f928401-8861-4148-a5bb-d584a12ab7fe" >
					<salesforce:query doc:name="Product2" doc:id="e9327f57-3c7c-4c84-8c00-53d291743f9f" config-ref="Salesforce_Config" target="products" targetValue="#[payload as Array]">
						<salesforce:salesforce-query ><![CDATA[SELECT Id, ProductCode, Brand__c, Name FROM Product2 WHERE ProductCode = ':prod_code']]></salesforce:salesforce-query>
						<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"prod_code" : payload.product_code default "" as String
}]]]></salesforce:parameters>
					</salesforce:query>
					<salesforce:query doc:name="ProductItem__c" doc:id="dea0c8d6-16ae-4f36-b477-7190416cc358" config-ref="Salesforce_Config" target="productItems" targetValue="#[payload as Array]">
						<salesforce:salesforce-query ><![CDATA[SELECT Id FROM ProductItem__c WHERE SerialNo__c = ':serial']]></salesforce:salesforce-query>
						<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"serial" : payload.serial_no default "" as String
}]]]></salesforce:parameters>
					</salesforce:query>
					<salesforce:query doc:name="LaptopConfiguration__c" doc:id="b3006d38-ea3d-480a-aa1e-60d3606c1651" config-ref="Salesforce_Config" target="laptopConfigurations">
						<salesforce:salesforce-query ><![CDATA[SELECT Id FROM LaptopConfiguration__c 
WHERE Processor__c = ':cpu' 
AND Memory__c = ':ram' 
AND StorageType__c = ':storage'
AND ConfigurableProduct__r.ProductCode = ':product_code']]></salesforce:salesforce-query>
						<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"cpu" : payload.cpu default '' as String,
	"ram" : payload.ram default '' as String,
	"storage" : payload.storage default '' as String,
	"product_code" : payload.product_code default '' as String
}]]]></salesforce:parameters>
					</salesforce:query>
					<set-variable value="#[(sizeOf(vars.products) &gt; 0) and (sizeOf(vars.productItems) == 0) and (sizeOf(vars.laptopConfigurations) &gt; 0)]" doc:name="valid" doc:id="549c5fd1-2725-4786-880c-4cc700f170d2" variableName="valid"/>
				</batch:step>
				<batch:step name="Insert_to_DB_Batch_Step" doc:id="4e800b70-e2b0-4372-9122-9f3d061f7c2a" acceptExpression="#[vars.valid]">
					<logger level="INFO" doc:name="Logger" doc:id="e894d8b7-6cf8-46f2-9e64-5bf0379d99de" message="IS VALID --&gt; #[vars.valid]"/>
					<db:insert doc:name="product_item" doc:id="d5f69ee8-f350-48f3-9a29-7f9083f7b28f" config-ref="Database_Config" target="insertResult">
						<db:sql ><![CDATA[INSERT INTO product_item (brand, name, serial_no, product_code, location,cpu,ram,storage)
values(:brand, :name, :serial_no, :product_code, :location, :cpu, :ram, :storage)
]]></db:sql>
						<db:input-parameters ><![CDATA[#[payload ++ { name: vars.products[0].Name, brand: vars.products[0].Brand__c }]]]></db:input-parameters>
					</db:insert>
				</batch:step>
				<batch:step name="Insert_to_Salesforce_Batch_Step" doc:id="a80b8da8-1e00-46e5-afcf-d1743d916629" acceptExpression="#[vars.valid]">
					<ee:transform doc:name="Transform Message" doc:id="16034eae-8208-41a3-8fe0-dab92af751fd" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload ++ 
{ LaptopConfiguration__c: vars.laptopConfigurations[0].Id } ++
{ Product__c: vars.products[0].Id } ++ 
{ Name: vars.products[0].Name }]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<logger level="INFO" doc:name="Logger" doc:id="d0f863cd-1c18-4467-9725-8825656661f5" message="#[output application/json --- payload]"/>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="38b889dd-a10b-4b53-933e-e1c28c6881cc" size="100">
						<logger level="INFO" doc:name="Logger" doc:id="159b72b6-529d-454d-af27-96ee67a9ecf3" message="#[output application/json &#10;&#10;--- &#10;payload]" />
						<salesforce:create type="ProductItem__c" doc:name="ProductItem__c" doc:id="16f5dc14-e990-4645-b785-d5b972257e1b" config-ref="Salesforce_Config">
							<salesforce:records ><![CDATA[#[payload map {
	Name: $.Name ++ ' ' ++ $.serial_no,
	SerialNo__c: $.serial_no,
	Location__c: $.location,
	Status__c: "Available",
	Product__c: $.Product__c,
	LaptopConfiguration__c: $.LaptopConfiguration__c
}]]]></salesforce:records>

						</salesforce:create>
					</batch:aggregator>
				</batch:step>
				<batch:step name="Product_Not_Exists" doc:id="0af12a50-1a2c-4e35-a45e-c6e6a42b0108" acceptExpression="#[sizeOf(vars.products) == 0]">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="2c48af10-ec47-4e66-93c6-1b0feb0a8bf9" size="100">
						<logger level="INFO" doc:name="Logger" doc:id="4db4e555-e29d-4f51-9bde-5d95333eec7b" message="#[output application/json --- &#10;(payload distinctBy $.product_code) map {&#10;	serial_no: $.serial_no,&#10;	product_code: $.product_code,&#10;	cpu: $.cpu,&#10;	ram: $.ram,&#10;	storage: $.storage,&#10;	reason: 'Product does not exists.'&#10;}]"/>
					</batch:aggregator>
				</batch:step>
				<batch:step name="Duplicate_Product_Items" doc:id="5ba83ba0-aae7-404d-9693-4fa8b61d99bd" acceptExpression="#[sizeOf(vars.productItems) &gt; 0]">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="bddfa279-02c7-492b-a4cd-ed11ec7a8b72" size="100">
						<logger level="INFO" doc:name="Logger" doc:id="d1ccd468-df63-4fec-8675-f01bc0a86da3" message="#[output application/json --- &#10;(payload distinctBy $.serial_no) map {&#10;	serial_no: $.serial_no,&#10;	product_code: $.product_code,&#10;	cpu: $.cpu,&#10;	ram: $.ram,&#10;	storage: $.storage,&#10;	reason: 'Product Item already in Salesforce.'&#10;}]"/>
					</batch:aggregator>
				</batch:step>
				<batch:step name="No_Configuration_Error" doc:id="7d9f1ce5-f8f4-4fce-ab6b-8cd2c9ad4dac" acceptExpression="#[sizeOf(vars.products) &gt; 0 and sizeOf(vars.laptopConfigurations) == 0]" >
					<batch:aggregator doc:name="Batch Aggregator" doc:id="5e4f49f3-6ce5-4250-aadd-ee5fdbf4e14e" size="100" >
						<logger level="INFO" doc:name="Logger" doc:id="75772a36-958a-4331-8ab9-d6dec4d1f7d4" message="#[output application/json --- &#10;(payload distinctBy ($.cpu ++ $.ram ++ $.storage)) map {&#10;	serial_no: $.serial_no,&#10;	product_code: $.product_code,&#10;	cpu: $.cpu,&#10;	ram: $.ram,&#10;	storage: $.storage,&#10;	reason: 'Product Item already in Salesforce.'&#10;}]" />
					</batch:aggregator>
				</batch:step>
			
</batch:process-records>
		</batch:job>
	</flow>
	<flow name="checkout_flow" doc:id="f6103bf7-ad87-4272-8631-09d73ee4c9c1" >
		<http:listener doc:name="POST /productItems/{ID}/checkout" doc:id="b1fdaaaa-5365-41e1-a826-7024d32a3aa0" config-ref="HTTP_Listener_config" path="/productItems/{ID}/checkout" allowedMethods="POST"/>
		<set-variable value="#[attributes.uriParams.ID]" doc:name="productId" doc:id="b0465ce1-220a-4c48-9251-0c825141e36c" variableName="productId"/>
		<db:query-single doc:name="product_item" doc:id="8cdec5fd-4ae4-461b-a177-8da0c0c30114" config-ref="Database_Config" target="productItem">
			<db:sql><![CDATA[SELECT serial_no, name FROM product_item WHERE id = :id]]></db:sql>
			<db:input-parameters><![CDATA[#[{'id': vars.productId}]]]></db:input-parameters>
		</db:query-single>
		<salesforce:query doc:name="ProductItem__c" doc:id="25869d1d-1394-45a3-8ec3-5a95683a8ce5" config-ref="Salesforce_Config" target="productItems_sf">
			<salesforce:salesforce-query ><![CDATA[SELECT Id, SerialNo__c, Status__c FROM ProductItem__c WHERE SerialNo__c = ':serial' AND Status__c != 'Available']]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"serial" : vars.productItem.serial_no
}]]]></salesforce:parameters>
		</salesforce:query>
		<choice doc:name="Choice" doc:id="6ec383a3-a103-40d9-b60a-212c71028883" >
			<when expression="#[sizeOf(vars.productItems_sf) &gt; 0]">
				<logger level="INFO" doc:name="Logger" doc:id="9e9ecede-71a0-4a8e-82c2-cd2ff0de77e4" message="Can't checkout #[vars.productItems_sf[0].Status__c] unit with Serial Number: #[vars.productItem.serial_no]." />
				<db:update doc:name="product_item" doc:id="2ed2725d-5c9c-4564-985a-83d2306b0f0f" config-ref="Database_Config" target="updateResult" >
					<db:sql ><![CDATA[UPDATE product_item
SET status = :status
WHERE id = :id]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	'id': vars.productId,
	'status': vars.productItems_sf[0].Status__c
}]]]></db:input-parameters>
				</db:update>
				<set-payload value="#['Can\'t checkout ' ++ vars.productItems_sf[0].Status__c ++ ' unit with Serial Number: ' ++ vars.productItem.serial_no]" doc:name="Set Payload" doc:id="ad7b3172-0285-4394-b764-34f0892c1c3c" />
			</when>
			<otherwise >
				<db:update doc:name="product_item" doc:id="c529f59f-7366-4298-a8c6-a3a02e3c34f8" config-ref="Database_Config" target="updateResult">
			<db:sql><![CDATA[UPDATE product_item
SET status = "Unavailable"
WHERE id = :id]]></db:sql>
			<db:input-parameters><![CDATA[#[{'id': vars.productId}]]]></db:input-parameters>
		</db:update>
				<ee:transform doc:name="queue payload" doc:id="9eef469c-a65a-4735-b928-8e667312600a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	FirstName: payload.fname,
	LastName: payload.lname,
	Email: payload.email,
	Phone: payload.phone,
	LeadSource: 'Retail Store',
	SerialNo__c: vars.productItem.serial_no,
	Location__c: payload.location,
	ProductName: vars.productItem.name
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<jms:publish doc:name="SF_CHECKOUT_QUEUE" doc:id="c5aa942e-679e-494f-a036-674a7f88cd07" config-ref="JMS_Config" destination="SF_CHECKOUT_QUEUE" />
				<set-payload value="#['You have successfully checked out unit with Serial Number: ' ++ vars.productItem.serial_no]" doc:name="Set Payload" doc:id="663a60c1-8669-4644-baa4-a1075970a198" />
			</otherwise>
		</choice>
	</flow>
	<flow name="checkout_queue_listener_flow" doc:id="4907a28b-f7e7-49f5-b4cf-47f7be9552e7">
		<jms:listener doc:name="SF_CHECKOUT_QUEUE" doc:id="881bc827-a502-449a-906d-9e40445f7932" config-ref="JMS_Config" destination="SF_CHECKOUT_QUEUE">
			<jms:consumer-type>
				<jms:queue-consumer />
			</jms:consumer-type>
		</jms:listener>
		<logger level="INFO" doc:name="Logger" doc:id="030c435b-94b3-4015-931b-5cc83a576e72" message="#[output application/java --- payload]"/>
		<salesforce:query doc:name="ProductItem__c" doc:id="c9df31a0-3388-4fea-b0fb-614663cce919" config-ref="Salesforce_Config" target="productItem">
			<salesforce:salesforce-query ><![CDATA[SELECT Id FROM ProductItem__c WHERE SerialNo__c = ':serial']]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"serial" : payload.SerialNo__c
}]]]></salesforce:parameters>
		</salesforce:query>
		<salesforce:query doc:name="Account" doc:id="fcfdebde-990e-4dcf-aa0a-2030ddcce763" config-ref="Salesforce_Config" target="accounts" targetValue="#[payload as Array]">
			<salesforce:salesforce-query><![CDATA[SELECT Id FROM Account WHERE Name = ':name']]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"name" : payload.Location__c
}]]]></salesforce:parameters>
		</salesforce:query>
		<logger level="INFO" doc:name="Logger" doc:id="7d088310-c5d5-4450-a437-3c317b72a8e0" message="Account ID:  #[vars.accounts[0].Id]" />
		<flow-ref doc:name="insert_contact_flow" doc:id="9f4a824e-beb8-4664-9b87-30391f0c3553" name="insert_contact_flow" target="contactInsertResult" />
		<logger level="INFO" doc:name="Logger" doc:id="b5c465e4-5bab-4959-8451-40e3a205a309" message=" Contact ID: #[vars.contactInsertResult.items[0].id]" />
		<flow-ref doc:name="insert_opportunity_flow" doc:id="55804b79-efda-4a45-a571-5f16ef8f9cc3" name="insert_opportunity_flow" target="opportunityInsertResult" />
		<salesforce:update doc:name="ProductItem__c" doc:id="a9867f86-bbee-4df5-9c59-940a08f1bb26" config-ref="Salesforce_Config" type="ProductItem__c" target="productItemUpdate">
			<salesforce:records><![CDATA[#[output application/java
---
[
	{
	Id: vars.productItem[0].Id,
	Status__c: 'Unavailable',
	Opportunity__c: vars.opportunityInsertResult.items[0].id
}
]]]]></salesforce:records>
		</salesforce:update>
		<logger level="INFO" doc:name="Logger" doc:id="f676373e-ea38-4870-9a31-ae8aee44215a" message="Opportunity ID: #[vars.opportunityInsertResult.items[0].id]" />
		<flow-ref doc:name="insert_opportunity_contact_flow" doc:id="8c807dba-482b-4571-9959-2074ca7096df" name="insert_opportunity_contact_flow" target="opportunityContactInsertResult" />
		<logger level="INFO" doc:name="Logger" doc:id="e45e96b8-5e6f-4d4d-bb10-808091b8197f" message="Opportunity Contact Role ID: #[vars.opportunityContactInsertResult.items[0].id]" />
	</flow>
	<flow name="insert_opportunity_contact_flow" doc:id="697f9a3d-2daf-482b-b00d-42b7c49ffb84" >
		<ee:transform doc:name="Opportunity Contact payload" doc:id="7e7178f0-fd5a-4fa7-8b33-75a9db8a6d4f">
					<ee:message>
					</ee:message>
			<ee:variables >
				<ee:set-variable variableName="opportunityContact" ><![CDATA[%dw 2.0
output application/java
---
[
	{
		OpportunityId: vars.opportunityInsertResult.items[0].id,
		ContactId: vars.contactInsertResult.items[0].id
	}	
]]]></ee:set-variable>
			</ee:variables>
				
</ee:transform>
		<salesforce:create type="OpportunityContactRole" doc:name="Opportunity Contact" doc:id="a1514a8a-d6fc-493e-a06a-92368035b85a" config-ref="Salesforce_Config" >
			<salesforce:records ><![CDATA[#[vars.opportunityContact]]]></salesforce:records>
		</salesforce:create>
	</flow>
	<flow name="insert_opportunity_flow" doc:id="d3250f00-e4ef-4866-91c0-0785cc6444a2" >
		<ee:transform doc:name="Opportunity payload" doc:id="ede70cf2-dcfd-4a0b-8271-476816087d7d">
					<ee:message>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="opportunity"><![CDATA[%dw 2.0
output application/java
---
[
	{
		AccountId: vars.accounts[0].Id,
		Name: payload.FirstName ++ " " ++ payload.LastName ++ " - " ++ payload.ProductName,
		StageName: "Closed Won",
		CloseDate: now() as String {format: "yyyy-MM-dd"} as Date
	}
]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
		<salesforce:create type="Opportunity" doc:name="Opportunity" doc:id="1031ad96-b267-4b60-9208-e84e9e79c343" config-ref="Salesforce_Config">
			<salesforce:records ><![CDATA[#[vars.opportunity]]]></salesforce:records>
		</salesforce:create>
	</flow>
	<flow name="insert_contact_flow" doc:id="72934133-d145-40d4-8ac2-5dcd6cd742ec" >
		<ee:transform doc:name="Contact payload" doc:id="cefcd47a-3a78-4dd3-b70b-36f66cfde20f">
			<ee:message>
			</ee:message>
					<ee:variables>
						<ee:set-variable variableName="contact"><![CDATA[%dw 2.0
output application/java
---
[
	payload - "SerialNo__c" - "Location__c" - "ProductName" ++

	{
		AccountId: vars.accounts[0].Id,	
	}	
]
]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
		<salesforce:create type="Contact" doc:name="Contact" doc:id="08fe5ce8-a6e8-49aa-bce3-20f0b742af80" config-ref="Salesforce_Config">
			<salesforce:records ><![CDATA[#[vars.contact]]]></salesforce:records>
		</salesforce:create>
	</flow>
	<flow name="view_item_flow" doc:id="69192174-4ef0-4d98-9a53-ae744de1b832" >
		<http:listener doc:name="GET /productItems/{ID}" doc:id="93d31ef8-e7ad-470f-911d-556cdd8ac5c4" config-ref="HTTP_Listener_config" path="/productItems/{ID}" allowedMethods="GET" />
		<set-variable value="#[attributes.uriParams.ID]" doc:name="productId" doc:id="2fc1284a-d5eb-4ff5-9daa-e132f93c86e6" variableName="productId" />
		<db:query-single doc:name="product_item" doc:id="825b0d40-4ee2-4d04-b152-20604a52b8ab" config-ref="Database_Config" target="productItem" >
			<db:sql ><![CDATA[SELECT serial_no, name, status FROM product_item WHERE id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'id': vars.productId}]]]></db:input-parameters>
		</db:query-single>
		<ee:transform doc:name="Transform Message" doc:id="8c8b59ec-f330-4e44-91b5-ec4779a3f1bf" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.productItem]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="sync_status_flow" doc:id="6c6cd350-4b30-420a-8f59-03c1621203dd" >
		<salesforce:modified-object-listener objectType="ProductItem__c" doc:name="On Modified Object" doc:id="1c07e929-521a-4e24-960e-76f8b89ad3cc" config-ref="Salesforce_Config">
			<scheduling-strategy >
				<fixed-frequency frequency="5" timeUnit="SECONDS" />
			</scheduling-strategy>
		</salesforce:modified-object-listener>
		<logger level="WARN" doc:name="Logger" doc:id="760dc004-ee9c-42af-8ff0-3e9b27926b37" message="#[output application/json&#10;---&#10;{&#10;	Id: payload.Id,&#10;	SerialNo__c: payload.SerialNo__c,&#10;	Status__c: payload.Status__c&#10;}]"/>
		<db:query-single doc:name="product_item" doc:id="8f962bf0-766b-4eed-aa42-d130263ae5af" config-ref="Database_Config" target="productItem" >
			<db:sql ><![CDATA[SELECT serial_no, name, location status FROM product_item WHERE serial_no = :serial]]></db:sql>
			<db:input-parameters ><![CDATA[#[{ 'serial': payload.SerialNo__c }]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="657d2be3-e227-48a8-9343-8ed5adbb5e4b" >
			<when expression="#[vars.productItem.status != payload.Status__c or vars.productItem.location != payload.Location__c]">
				<db:update doc:name="product_item" doc:id="cfc93dd1-0291-4d60-a080-9e66d2d27be7" config-ref="Database_Config" target="updateResult" >
					<db:sql ><![CDATA[UPDATE product_item
SET status = :status,
location = :location
WHERE serial_no = :serial]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	'serial': payload.SerialNo__c,
	'status': payload.Status__c,
	'location': payload.Location__c
}]]]></db:input-parameters>
				</db:update>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="2379fa05-18d0-4053-94fc-e13125f3586c" />
			</otherwise>
		</choice>
	</flow>
	<flow name="view_items_flow" doc:id="612e95bb-8ece-4705-b2bc-52450d87ec11" >
		<http:listener doc:name="GET /productItems" doc:id="cacfc92b-af06-46d0-b738-c97d64760821" config-ref="HTTP_Listener_config" path="/productItems" allowedMethods="GET" />
		<db:select doc:name="Select available product items" doc:id="4d7170fd-2088-4efb-9a01-2ce5957d88ef" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT serial_no, name, location, status FROM product_item WHERE status = 'Available' and location = :location]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'location': attributes.queryParams['location']}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="f92c970c-7bf2-483b-b01e-bf3bae494135" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	

</mule>